1. Необходимые модули(последние лежат в релизе):
 LoadDog.bpl
 LoadDog.dcp(добавить в requires)
 
2. В uses написать DogLoaderUnit.
3. Использовать процедуру:
 procedure GetDogovorInfo(Owner : TComponent; input : PSpravParams; output : PSpravParams);
4. Входные параметры(передаються через объект input, см. пример в п. № 6):
   DataBase - хэндл базы данных;
   ReadTransaction - хэндл читающей транзакции;
   id_dog - идентификатор договора;
   kod_dog - код договора;
5. Выходные параметры(получаются через объект output, см. пример в п. № 6):

    ID_DOG - Идентификатор договора
    KOD_DOG - Код договора
    REGEST_NUM - Регистрационный номер договора
    N_DOG - Номер договора
    D_DOG - Дата договора
    NOMN_DOG - Номенклатурный номер договора
    NOMD_DOG - Номенклатурная дата
    ID_CUSTOMER - Идентификатор контрагента
    NAME_CUSTOMER - Наименование контрагента
    ID_RATE_ACCOUNT - Идентификатор счета контрагента
    DATE_BEG - Начальная дата
    DATE_END - Конечная дата
    SUMMA - Сумма по договору
    DOG_CONTINUE - Договор продлен
    NOT_SUMMA - Договор без суммы
    DOG_CLOSE - Признак закрытия договора
    DOG_NOTE - Основание договора
    FIO_DONGU - ФИО лица от ДонНУ, заключившего договор
    FIO_POSTAV - ФИО контрагента, заключившего договор
    KRIT_DAT - Критическая дата оплаты
    NDS_SUM - Сумма НДС в договоре
    NDS_PAY - Сумма оплаченого НДС
    SUM_FULFIL - Сумма выполнения договора
    SUM_PAY - Сумма оплаты договора
    SUM_TODAY - Сумма к оплате
    USE_BEG - Начало периода использования записи
    USE_END - Конец периода использования записи
    ID_USER - Идентификатор пользователя
    COMMENT - Комментарий
    ID_RATE_ACC_NATIVE - Cобственный счет
    ID_MAN - Идентификатор физического лица
    TIME_EDIT - Дата и время последнего изменения
    IP_COMP - IP-адрес компьютера, с которого было сделано последнее изменение
    NAME_COMP - сетевое имя компьютера, с которого было сделано последнее изменение
    RATE_ACCOUNT - Расчетный счет контрагента
    MFO - МФО банка расчетного счета контрагента
    NAME_BANK - Название банка
    NAME_CUSTOMER_NATIVE - Название нейтив контрагента
    RATE_ACCOUNT_NATIVE - Расчетный счет нейтив контрагента
    MFO_NATIVE - МФО банка расчетного счета нейтив контрагента
    NAME_BANK_NATIVE - Название банка нейтив контрагента
    ID_CUSTOMER_NATIVE - Идентификатор нейтив контрагента
    FAMILIA - фамилия проживающего/обучающегося
    IMYA - имя проживающего/обучающегося
    OTCHESTVO - отчество проживающего/обучающегося
    FIO_COMBO - ФИО полностью проживающего/обучающегося
    FAM_UK - фамилия (укр) проживающего/обучающегося
    IMYA_UK - имя (укр) проживающего/обучающегося
    OT_UK - отчество (укр) проживающего/обучающегося
    UK_FIO_COMBO - ФИО полностью (укр) проживающего/обучающегося
    NUM_DOG - номер договора по обучению
    DOG_TYPE - Тип договора(1 - студгородок; 2 - Обучение; 0 - Другой)

6. Пример использования:

 var 
   i, o : TSpravParams;
 begin
   i := TSpravParams.Create;
   o := TSpravParams.Create;
   i['DataBase'] := Integer(dm.Database.Handle);
   i['ReadTransaction'] := Integer(dm.ReadTransaction.Handle);
   i['ID_DOG']  := id_dog;
   i['KOD_DOG'] := kod_dog;
   GetDogovorInfo(Self, @i, @o);
   ShowMessage('Сумма по договору = ' + FloatToStr(o['SUMMA']));
   i.Free;
   o.Free;
 end;
 