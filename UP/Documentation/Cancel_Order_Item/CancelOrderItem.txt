
*************
ОБ АВТОРАХ:
*************

Автор                                          :  Найдёнов Е.А.
Редактор                                     :  Найдёнов Е.А.
Дата создания                            :  08.02.2007
Дата последней модификации :  08.02.2007

****************************
КОНТАКТНАЯ ИНФОРМАЦИЯ:
****************************

Найдёнов Егор Александрович
тел.   : 8(062) 305-50-27
ICQ# : 260354695
e-mail : egor@buhg.dongu.donetsk.ua


**************
СОДЕРЖАНИЕ:
**************

1. Общие положения;
2. Используемые объекты БД;
3. Используемые файлы библиотек;
4. Интерфейс вызова;
5. Логика работы модуля;
6. Алгоритмы функционирования;


---------------------------
ОБЩИЕ ПОЛОЖЕНИЯ:
---------------------------

Программный модуль предназначен для формирования приказа для отмены пункта другого приказа. Он был спроектирован исключительно для
использования в рамках системы "Управление персоналом" согласно требований и общей концепции, разработанной группой ведущих инжинеров отдела "Аналитического учета и диагностического анализа финансово-хозяйственной деятельности" бухгалтерии ДонНУ( Пригунов А.В., Смоктий К.В., Тимофеев А.В., Кирилишен Я.В. ).


---------------------------------------
ИСПОЛЬЗУЕМЫЕ ОБЪЕКТЫ БД:
---------------------------------------

Таблицы:
********

Основные:
~~~~~~~~
-- UP_DT_CANCEL_INST  Инструкции для отмены действия пункта приказа;
-- UP_DT_CANCEL_BUFF Буфферная таблица инструкций на отмену пункта приказа;

Вспомогательные:
~~~~~~~~~~~~~~
-- UP_DT_CANCEL_INST_HST    Протокол изменений данных в таблице инструкций об отмене пунктов приказа;
-- UP_DT_ORDER_ITEMS_BUFF Буфферная таблица пунктов приказа;

Хранимые процедуры:
*******************

Основные:
~~~~~~~~
-- UP_DT_CANCEL_SEL             Возвращает реквизиты пункта приказа, отменяющего другой пункт приказа;
-- UP_DT_CANCEL_INS             Заполняет буфера для добавления пункта приказа на отмену другого пункта приказа;
-- UP_DT_CANCEL_UPD            Заполняет буфера для редактирования пункта приказа на отмену другого пункта приказа;
-- UP_DT_CANCEL_BUFF_INS Добавляет в буфер информацию для отмены пункта приказа;
-- UP_DT_CANCEL_BUFF_DEL Очищает буфер;
-- UP_DT_CANCEL_INST_INS   Добавляет инструкцию для отмены пункта приказа;

Вспомогательные:
~~~~~~~~~~~~~~
-- UP_CAN_CANCEL_ORDER_ITEM Проверяет был ли изменен(отменен) пункт приказа и, если был, то возвращает идентификатор изменившего(отменившего) пункта приказа;
-- UP_SYS_CAN_CANCEL_ORDER_ITEM Проверяет(рекурсивно) возможность отмены пункта приказа ( вспомогательная процедура для UP_KER_CAN_CANCEL_ORDER_ITEM );
-- UP_KER_CAN_CANCEL_ORDER_ITEM Проверяет: можно ли отменить пункт приказа?;

Триггеры:
********
-- UP_DT_CANCEL_INST_BI0 Автогенерация пустого первичного ключа;


-------------------------------------------------
ИСПОЛЬЗУЕМЫЕ ФАЙЛЫ БИБЛИОТЕК:
-------------------------------------------------

Основные:
~~~~~~~~
-- UP_CancelOrderItem7.bpl;
-- UP_CancelOrderItem7.dcp (нужен только для компиляции);

Вспомогательные:
~~~~~~~~~~~~~~
-- UpKernel.bpl;
-- Applib.bpl;
-- CommonSp.bpl;
-- qFControls.bpl;
-- qFEditForm.bpl;

-- UpKernel.dcp (нужен только для компиляции);
-- Applib.dcp (нужен только для компиляции);
-- CommonSp.dcp (нужен только для компиляции);
-- qFControls.dcp (нужен только для компиляции);
-- qFEditForm.dcp (нужен только для компиляции);


---------------------------
ИНТЕРФЕЙС ВЫЗОВА
---------------------------:

Вызов модуля извне выполняется в 2 этапа:

1. Вызов функции CreateSprav (без параметров) , которая возвращает ссылку на экземпляр дочернего каркасного класса TSprav;
2. Вызов функции GetFrame (без параметров) , которая возвращает ссылку на на экземпляр дочернего класса TFrame (т.е. на класс TfrCancelOrderItem, который реализует диалог добавления/изменения/просмотра пункта приказа, отменяющего дествие другого пункта приказа)

Для заполнения входящих параметров для вызова модуля, следует использовать свойство Input : TRxMemoryData экземпляра класса TSprav.
Обязательными для заполнения являются такие параметры:

-- 'Mode'            - режим вызова модуля;
-- 'IdOrder'         - идентификатор приказа, отменяющего пункт другого приказа;
-- 'NumItem'       - номер пункта приказа, отменяющего пункт другого приказа;
-- 'DBHandle'     - идентификатор соединения с БД;
-- 'Outer_Hwnd' - дескриптор управляющего окна-собственника, являющегося контейнером для возвращаемого фрейма;
-- 'IdOrderItem'  - идентификатор пункта приказа, отменяющего пункт другого приказа;
-- 'NumSubItem' - номер подпункта приказа, отменяющего пункт другого приказа;


-----------------------------------
ЛОГИКА РАБОТЫ МОДУЛЯ:
-----------------------------------

Кратко логика работы модуля может быть сформулирована так:

1. Используя интерфейсные элементы управления системы "Управление персоналом", пользователь выбирает приказ, который будет содержать пункт приказа, отменющий пункт другого приказа;
2. Используя интерфейсные элементы управления модуля, пользователь выбирает пункт приказа, подлежащий отмене и формирует дополнительные реквизиты добавляемого пункта приказа;
3. После подтверждения пользователем введенной информации, выполняется ее запись в буферные таблицы;
4. Затем выполняется вызов ядра, которое проверяет корректность информации в буферных таблицах;
5. Если результат проверки ядра положителен, то автоматически генерируется новое информационное пространство, "узаконивающее" факт отмены пункта приказа;
6. Протоколирование изменений. Переход к 8;
7. Если результат проверки ядра отрицателен, то пользователь получает уведомление о неудачной попытке отменить пункт приказа. На экран (по желанию пользователя) выводится перечень ошибок, воспрепятствовавших этой отмене;
8. Очистка буферных таблиц;
9. Завершение работы модуля;


-----------------------------------------------
АЛГОРИТМЫ ФУНКЦИОНИРОВАНИЯ:
-----------------------------------------------

Прежде чем сформировать приказ, содержащий пункт приказа для отмены пункта другого приказа, необходимо ответить на вопрос: а можно ли вообще отменить выбранный пункт приказа? Для этих целей используется хранимая процедура UP_CAN_CANCEL_ORDER_ITEM.

Логика работы ХП:

Шаг 1. Проверить: не отменен ли уже пункт приказа, который пытается отменить пользователь? Если данный пункт приказа уже отменен, тогда завершить работу хранимой процедуры. Если нет, тогда перейти к шагу 2;
Шаг 2. Проверить: не был ли изменен данный пункт приказа другим пунктом приказа? Если да, тогда выяснив каким именно, перейти к шагу 3. Если нет, тогда перейти к шагу 5;
Шаг 3. Проверить: не отменялся ли пункт приказа, который изменил сходный? Если да, тогда выяснив каким именно, перейти к шагу 4. Если нет, тогда уведомить о том, что невозможно отменить исходный пункт приказа;
Шаг 4. Проверить: не был ли изменен пункт приказа ( полученный на предыдущем шаге ) другим пунктом приказа? Если да, тогда перейти к шагу 2. Если нет, тогда перейти к шагу 5;
Шаг 5. Сгенерировать информационное пространство, идентичное тому, которое было изменено ИСХОДНЫМ ПРИКАЗОМ и пометить его, как созданное ОТМЕНЯЮЩИМ приказом.

